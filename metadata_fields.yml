# Flatfile metadata fields. Syntax (in YAML format):
#
# <column_name>:
#   dtype:    The data type. Supported values are: null (the default when missing), int,
#             float, str, bool, datetime. Provide a list of values (all the same dtype)
#             for categorical data, i.e. when the column can only take on one of the
#             given values. If non-null, the data type will be used for data validation
#   help:     The field help (optional), used to provide documentation

# YAML notes:
# Unless required, strings (text sequences) don't need quotes ("'). Date-times must be
# given as ISO-formatted strings (e.g.: 2006-01-01T12:31:21). YAML is a superset of JSON,
# so you can type sequences and mappings as JSON Arrays and Objects, respectively. If
# you want to type over multiple lines for readability, prefix the text with >-
# (see examples here below or at https://stackoverflow.com/a/3790497)

# Distance related CSV fields:

azimuth:
  dtype: float
repi:
  dtype: float
  help: epicentral distance (in km)
rrup:
  dtype: float
  help: rupture_distance (in km).
rjb:
  dtype: float
  help: Joyner-Boore distance (in km)
rhypo:
  dtype: float
  help: hypocentral distance (in km)
rx:
  dtype: float
  help: Horizontal distance (in km) from the top of the rupture measured perpendicular to strike
ry0:
  dtype: float
  help: Horizontal distance (in km) from the top of the rupture measured parallel to strike
rvolc:
  dtype: float
  help: Distance through volcanic zone (km). When missing, it defaults to 0

# Rupture related CSV fields:

evt_id:
  dtype: str
  help: >-
    The ID of the seismic event, used to determine when two records
    originate from the same earthquake. IDs do not have a specific data type but
    are usually either numeric integers (recommended) or string of text (discouraged,
    especially for flatfiles with many distinct event IDs)
evt_time:
  dtype: datetime
  help: the event time (as ISO formatted string, e.g. 2006-03-31T00:12:24)
evt_lat:
  dtype: float
  help: Event latitude (hypocenter latitude, in deg) in [-90, 90]
evt_lon:
  dtype: float
  help: Event longitude (hypocenter longitude, in deg) in [-180, 180]
mag:
  dtype: float
  help: event magnitude
mag_type:
  dtype: ["ML", "mb", "Ms", 'Mw']
  help: magnitude type
evt_depth:
  dtype: float
  help: event depth (hypocentral depth, in km)
rup_top_depth:
  dtype: float
  help: Top of Rupture Depth (km), aka ztor. Must be >=0
rup_width:
  dtype: float
  ">=": 0
  help: >-
    Down-dip width of the rupture (km), >=0. Hint: missing data might be derived from 
    the record magnitude using a Magnitude-Scaling Relationship defined for PEER PSHA 
    test cases, and assuming an aspect ratio of 1
dip:
  dtype: float
  help: >-
    the angle of the fault relative to the horizontal (deg) in [0, 90]
    Hint: in case of more components available (e.g. from web services), the
    correct one should be inferred by the user from the rupture, or can be chosen
    randomly if no information is available
rake:
  dtype: float
  help: >-
    the direction the hanging wall moves, relative to the fault strike (deg) in [-180, 180]
    Hint: in case of more components available (e.g. from
    web services), the correct one should be inferred by the user from the rupture,
    or can be chosen randomly if no information is available
sof:
  dtype: [0,1,2,3,4]
  help: >-
    Mechanism based on Rake Angle (Style of Faulting, sof). 0: Strike-slip (rake angles:
    -180 < Rake < -150, -30 < Rake < 30, 150 < Rake < 180). 1: Normal (-120 < Rake < -60).
    2: Reverse (60 < Rake < 120). 3: Reverse-Oblique (30 < Rake < 60, 120 < Rake < 150),
    4: Normal-Oblique (-150 < Rake < -120, -60 < Rake < -30)
strike:
  dtype: float
  help: Strike angle in [0, 360] of the fault plane used to approximate the causative fault surface
  type: rupture

# Site-related CSV fields:

sta_id:
  dtype: str
  help: >-
    The unique ID of the seismic station. If missing, an id is inferred from
    the station spatial coordinates (latitude, longitude), which must all be present.
    In general, you can infer the id from the tuple (network_code, station_code)
    or create your own, as long as it holds: same id <=> same station. IDs should
    be preferably of type integer for performance reasons
z1pt0:
  dtype: float
  help: >-
    depth of the layer where seismic waves start to propagate with a speed above 1.0
    km/sec, in meters. Missing data (e.g., empty cell, NaN, column not provided) will be
    derived from the vs30 (if present) using the Chiou & Youngs (2014) California
    model
z2pt5:
  dtype: float
  help: >-
    depth of the layer where seismic waves start to propagate with a speed above
    2.5 km/sec, in km. Missing data (e.g., empty cell, NaN, column not provided) will
    be derived from the vs30 (if present) using the Campbell & Bozorgnia (2014) model
vs30:
  dtype: float
  help: Average shear wave velocity in the top 30 m, in m/s (>=0)
backarc:
  dtype: bool
  help: >-
    whether or not the site is in the subduction backarc. When missing (or false, the
    default) the site is assumed to be unknown or in the subduction forearc
sta_lat:
  dtype: float
  help: station latitude (deg), in [-90, 90]
sta_lon:
  dtype: float
  help: station longitude (deg), in [-180, 180]
vs30measured:
  dtype: bool
  help: whether or not the Vs30 is measured (default true)
xvf:
  dtype: float
  help: distance to the volcanic front (km)
fpeak:
  dtype: float
  help: >-
    Frequency that corresponds to the peak of the horizontal to vertical
    spectral ratio (Hz), >=0
region:
  dtype: [0, 1, 2, 3, 4, 5]
  help: >-
    The ESHM2020 attenuation cluster region to which the site belongs
    (https://doi.org/10.1007/s10518-020-00899-9). 0 (default when missing): unknown,
    1: average / slower, 2: average / faster, 3: fast, 4: average, 5: very slow
geology:
  dtype: ["CENOZOIC", "HOLOCENE", "JURASSIC-TRIASSIC", "CRETACEOUS", "PALEOZOIC",
          "PLEISTOCENE", "PRECAMBRIAN", "UNKNOWN"]
  help: geological classification of the site. Default UNKNOWN
slope:
  dtype: float
  help: The local slope of the station, >0
fpath_h1:
  dtype: str
  help: the waveform path, relative to the metadata.csv directory, of the 1st horizontal component
fpath_h2:
  dtype: str
  help: the waveform path, relative to the metadata.csv directory, of the 2nd horizontal component
fpath_v:
  dtype: str
  help: the waveform path, relative to the metadata.csv directory, of the 3rd horizontal component

# Processing-related CSV fields:

filter_type:
  dtype: ["O", "A", "C"]
  help: >- 
    Type of filter used data providesrs to remove noise at long and short periods. 
    O: Ormsby, A: Acausal Butterworth, C Causal butterworth
npass:
  dtype: int
  help: Number of passes of filter, default 0
nroll:
  dtype: float
  help: The `nroll` parameter of the Butterworth filter. None when not applicable (Ormsby filter)
hp_h1:
  dtype: float
  help: Corner frequency of the high-pass filter of component H1, in Hz
hp_h2:
  dtype: float
  help: Corner frequency of the high-pass filter of component H2, in Hz
lp_h1:
  dtype: float
  help: Corner frequency of the low-pass filter of component H1, in Hz
lp_h2:
  dtype: float
  help: Corner frequency of the low-pass filter of component H2, in Hz
luf_h1:
  dtype: float
  help: Lowest usable frequency of component H1, in Hz usually as ratio of hp_h1
luf_h2:
  dtype: float
  help: Lowest usable frequency of component H2, in Hz usually as ratio of hp_h1
